%PDF-1.3
%ºß¬à
3 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Annots [
<</Type /Annot /Subtype /Link /Rect [56.6929133858267775 792.5570866141731585 242.4529133858268324 783.3570866141732267] /Border [0 0 0] /A <</S /URI /URI (https://www.compayz.com/?utm_source=download-gpt) >> >>
]
/Contents 4 0 R
>>
endobj
4 0 obj
<<
/Length 2946
>>
stream
0.5670000000000001 w
0 G
BT
/F2 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 785.1970866141732586 Td
(Chat-GPT PDF by CompayZ - www.compayz.com) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 771.0238582677164914 Td
(Usuário: User) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 756.8506299212598378 Td
(1 / 1) Tj
T* (explain unistd.h write) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 742.6774015748030706 Td
(Data: Friday, October 6, 2023 at 10:50:31 PM - \(Africa/Cairo\)) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 728.5041732283464171 Td
(URL: https://chat.openai.com/c/1c06dcbb-9b8a-489e-9042-220d054cebda) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 660.4726771653542983 Td
(Sure!) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 615.1183464566928478 Td
( "unistd.h"  is a header file in the C programming language that provides access to the POSIX) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 592.4411811023621794 Td
(operating system API. Among the many system calls and functions available through this header) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 569.7640157480313974 Td
(is the  "write\(\)"  function.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 524.4096850393700606 Td
(Here's a breakdown of the  "write\(\)"  function:) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 456.378188976377885 Td
(SYNTAX:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 411.0238582677164914 Td
(c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 388.3466929133857661 Td
( "ssize_t write\(int fd, const void *buf, size_t count\);" ) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 320.3151968503935905 Td
(PARAMETERS:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 274.9608661417322537 Td
( 1. fd: This is the file descriptor of where to write the output. You might obtain this descriptor from) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 252.2837007874014716 Td
(functions like  "open\(\)" . Commonly used file descriptors are:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 229.6065354330708033 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 206.9293700787401349 Td
(    *  "0"  for standard input) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 184.2522047244093528 Td
(    *  "1"  for standard output) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 161.5750393700786844 Td
(    *  "2"  for standard error) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
526.2935433070865656 28.3464566929134207 Td
(Pág: 1 de 8) Tj
ET
endstream
endobj
5 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 6 0 R
>>
endobj
6 0 obj
<<
/Length 2636
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
( 2. buf: A pointer to the buffer containing the data you want to write.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
( 3. count: The number of bytes you want to write from the buffer.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(RETURN VALUE:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
( * On success, the number of bytes written is returned. This might be less than count if, for) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(example, there is insufficient space on the underlying physical medium, or if the ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
("RLIMIT_FSIZE"  resource limit is encountered.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
( * On error, -1 is returned and  "errno"  is set appropriately.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(COMMON REASONS FOR ERRORS:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
( * EBADF:  "fd"  is not a valid file descriptor or is not open for writing.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
( * EIO: An I/O error occurred.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
( * EINVAL: Invalid argument.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
( * EPIPE:  "fd"  is connected to a pipe or socket whose reading end is closed. This will also send) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(a  "SIGPIPE"  signal to the calling process \(which can be caught or ignored\).) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(EXAMPLE:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(Here's a simple example using the  "write\(\)"  function to write to the standard output:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
(c) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
526.2935433070865656 28.3464566929134207 Td
(Pág: 2 de 8) Tj
ET
endstream
endobj
7 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 8 0 R
>>
endobj
8 0 obj
<<
/Length 4689
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 785.1970866141732586 Td
(#include <unistd.h>) Tj
ET
0. g
85.0393700787401627 779.5277952755905062 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 739.8427559055118081 Td
(int main\(\) {) Tj
ET
0. g
85.0393700787401627 734.1734645669290558 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 717.1655905511811397 Td
(    const char *msg = "Hello, World!\\n";) Tj
ET
0. g
85.0393700787401627 711.4962992125983874 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 694.4884251968503577 Td
(    write\(1, msg, 13\);  // 13 is the number of characters in the) Tj
ET
0. g
85.0393700787401627 688.819133858267719 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 671.8112598425196893 Td
(string) Tj
ET
0. g
85.0393700787401627 666.1419685039369369 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 649.1340944881889072 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 643.4648031496062686 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 626.4569291338582389 Td
(}) Tj
ET
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(In practice, for writing to files, many programs might prefer using higher-level I/O functions) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(provided by the C Standard Library like  "fputs\(\)" ,  "fprintf\(\)" , etc. However,  "write\(\)"  provides a) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(lower-level interface directly to the OS, which can be useful in certain scenarios, especially) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(where performance or specific system-level interactions are a concern.) Tj
ET
0.78 g
56.6929133858267775 416.69314960629913 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(P 1:) Tj
ET
0.78 g
56.6929133858267775 394.0159842519684048 481.8941732283464034 -22.677165354330711 re
f
0.78 g
56.6929133858267775 371.3388188976377364 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(#include <unistd.h>) Tj
ET
0.78 g
56.6929133858267775 348.6616535433070112 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(/**) Tj
ET
0.78 g
56.6929133858267775 325.984488188976286 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(* main - the Entery point) Tj
ET
0.78 g
56.6929133858267775 303.3073228346455608 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(*) Tj
ET
0.78 g
56.6929133858267775 280.6301574803148924 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(* Return: complete successfully) Tj
ET
0.78 g
56.6929133858267775 257.9529921259841672 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(*/) Tj
ET
0.78 g
56.6929133858267775 235.2758267716534419 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(int main\(void\)) Tj
ET
0.78 g
56.6929133858267775 212.5986614173227451 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
({) Tj
ET
0.78 g
56.6929133858267775 189.9214960629920199 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(write\(2, "and that piece of art is useful\\" - Dora Korpar, 2015-10-19\\n", 59\);) Tj
ET
0.78 g
56.6929133858267775 167.2443307086613231 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
526.2935433070865656 28.3464566929134207 Td
(Pág: 3 de 8) Tj
ET
endstream
endobj
9 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 10 0 R
>>
endobj
10 0 obj
<<
/Length 2647
>>
stream
0.5670000000000001 w
0 G
0.78 g
56.6929133858267775 802.2049606299211746 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(return \(1\);) Tj
ET
0.78 g
56.6929133858267775 779.5277952755905062 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(}explain it) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(Certainly! Let's go step by step through this code:) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(HEADER INCLUSION:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
( "#include <unistd.h>" ) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(This includes the  "unistd.h"  header, which provides access to the POSIX API and, in particular,) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(the  "write\(\)"  function that's being used in the program.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(DOCUMENTATION:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 348.6616535433070112 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 331.6537795275589815 Td
(/**) Tj
ET
0. g
85.0393700787401627 325.984488188976286 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 308.9766141732283131 Td
( * main - the Entry point) Tj
ET
0. g
85.0393700787401627 303.3073228346455608 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 286.2994488188975311 Td
( *) Tj
ET
0. g
85.0393700787401627 280.6301574803148924 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 263.6222834645668627 Td
( * Return: complete successfully) Tj
ET
0. g
85.0393700787401627 257.9529921259841672 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 240.9451181102361943 Td
(*/) Tj
ET
0. g
85.0393700787401627 235.2758267716534419 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
526.2935433070865656 28.3464566929134207 Td
(Pág: 4 de 8) Tj
ET
endstream
endobj
11 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 12 0 R
>>
endobj
12 0 obj
<<
/Length 2701
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(This is a multi-line comment, often used for documentation. The comment describes the  "main" ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(function as the "Entry point" of the program. It also notes that the function will "Return: complete) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(successfully". Although the statement might be a bit misleading since the function actually) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(returns  "1" , which conventionally indicates an error or abnormal termination in many contexts.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(MAIN FUNCTION:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 535.748267716535338 Td
(int main\(void\)) Tj
ET
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 513.0711023622046696 Td
({) Tj
ET
0. g
85.0393700787401627 507.4018110236219741 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 490.3939370078739444 Td
(        ...) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 467.716771653543276 Td
(}) Tj
ET
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(This is the definition of the main function, which is the entry point of the C program.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(WRITE\(\) FUNCTION:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
( "write\(2, "and that piece of art is useful\\" - Dora Korpar, 2015-10-19\\n", 59\);" ) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(This calls the  "write\(\)"  function:) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
526.2935433070865656 28.3464566929134207 Td
(Pág: 5 de 8) Tj
ET
endstream
endobj
13 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 14 0 R
>>
endobj
14 0 obj
<<
/Length 3863
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
( * The first argument  "2"  is the file descriptor for standard error \( "stderr" \). This means the) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(string will be written to the error output stream, rather than the standard output \( "stdout" \).) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
( * The second argument is a string  ""and that piece of art is useful\\" - Dora Korpar,) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(2015-10-19\\n"" . The  "\\""  sequence is used to include the double quotation mark as part of the) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(string. The string also ends with a newline character  "\\n"  to move to the next line after printing.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
( * The third argument  "59"  indicates that 59 bytes \(characters, in this case\) from the string) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(should be written. If you count the characters in the string including the escape sequences \( "\\"" ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
(counts as one character, as does  "\\n" \), you'll find it is indeed 59 characters long.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(RETURN STATEMENT:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
( "return \(1\);" ) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(This returns a value of  "1"  from the  "main"  function. As previously mentioned, in many) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(contexts, returning  "1"  from  "main"  indicates an error or abnormal termination. However,) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(without more context on how this program is used or its intentions, this is just a convention and) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(not a rule.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(In summary, this program, when run, will write the string "and that piece of art is useful" - Dora) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(Korpar, 2015-10-19 to the standard error stream and then terminate with a return code of  "1" .) Tj
ET
0.78 g
56.6929133858267775 235.2758267716534419 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(P 2:) Tj
ET
0.78 g
56.6929133858267775 212.5986614173227451 481.8941732283464034 -22.677165354330711 re
f
0.78 g
56.6929133858267775 189.9214960629920199 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(example of func write with 0 for standard input) Tj
ET
0.78 g
56.6929133858267775 167.2443307086613231 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(1 for standard output) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
526.2935433070865656 28.3464566929134207 Td
(Pág: 6 de 8) Tj
ET
endstream
endobj
15 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 16 0 R
>>
endobj
16 0 obj
<<
/Length 3647
>>
stream
0.5670000000000001 w
0 G
0.78 g
56.6929133858267775 802.2049606299211746 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(2 for standard error) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(The  "write\(\)"  function is used to write to file descriptors. Here's how it would look for each of the) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(three standard file descriptors:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
( 1. Standard Input \( "stdin" , file descriptor 0\):) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(    * Generally,  "write\(\)"  isn't used to write to standard input \( "stdin" \), because it doesn't make) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(conceptual sense. Standard input is meant for reading input, not writing to it. If you attempt to) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
(write to it using  "write\(\)" , you'll likely get an error. So, I'll skip this in the examples.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
( 2. Standard Output \( "stdout" , file descriptor 1\):) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(    * This will output data to the console or wherever the standard output is redirected.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 394.0159842519684048 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 377.0081102362204319 Td
(#include <unistd.h>) Tj
ET
0. g
85.0393700787401627 371.3388188976377364 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 348.6616535433070112 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 331.6537795275589815 Td
(int main\(void\) {) Tj
ET
0. g
85.0393700787401627 325.984488188976286 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 308.9766141732283131 Td
(    const char *msg_stdout = "This is written to standard) Tj
ET
0. g
85.0393700787401627 303.3073228346455608 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 286.2994488188975311 Td
(output.\\n";) Tj
ET
0. g
85.0393700787401627 280.6301574803148924 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 263.6222834645668627 Td
(    write\(1, msg_stdout, 36\);  // writing to stdout) Tj
ET
0. g
85.0393700787401627 257.9529921259841672 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 240.9451181102361943 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 235.2758267716534419 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 218.2679527559054122 Td
(}) Tj
ET
0. g
85.0393700787401627 212.5986614173227451 425.2012598425196188 -22.677165354330711 re
f
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
526.2935433070865656 28.3464566929134207 Td
(Pág: 7 de 8) Tj
ET
endstream
endobj
17 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 18 0 R
>>
endobj
18 0 obj
<<
/Length 2826
>>
stream
0.5670000000000001 w
0 G
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
( 3. Standard Error \( "stderr" , file descriptor 2\):) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(    * This will output data to the console's error stream or wherever the standard error is) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(redirected. It's often used for error messages.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 603.7797637795274568 Td
(#include <unistd.h>) Tj
ET
0. g
85.0393700787401627 598.1104724409448181 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 575.4333070866141497 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 558.42543307086612 Td
(int main\(void\) {) Tj
ET
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 535.748267716535338 Td
(    const char *msg_stderr = "This is written to standard) Tj
ET
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 513.0711023622046696 Td
(error.\\n";) Tj
ET
0. g
85.0393700787401627 507.4018110236219741 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 490.3939370078739444 Td
(    write\(2, msg_stderr, 36\);  // writing to stderr) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 467.716771653543276 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 445.0396062992125508 Td
(}) Tj
ET
0. g
85.0393700787401627 439.3703149606298552 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(You can run these programs separately and observe their behavior. If you're on a Unix-like) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(system, you can also play with redirection \( ">" ,  "2>"  etc.\) in the terminal to see how these) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(outputs can be captured or redirected to files.) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
526.2935433070865656 28.3464566929134207 Td
(Pág: 8 de 8) Tj
ET
endstream
endobj
1 0 obj
<</Type /Pages
/Kids [3 0 R 5 0 R 7 0 R 9 0 R 11 0 R 13 0 R 15 0 R 17 0 R ]
/Count 8
>>
endobj
19 0 obj
<<
/Type /Font
/BaseFont /Helvetica
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
20 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
21 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
22 0 obj
<<
/Type /Font
/BaseFont /Helvetica-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
23 0 obj
<<
/Type /Font
/BaseFont /Courier
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
24 0 obj
<<
/Type /Font
/BaseFont /Courier-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
25 0 obj
<<
/Type /Font
/BaseFont /Courier-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
26 0 obj
<<
/Type /Font
/BaseFont /Courier-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
27 0 obj
<<
/Type /Font
/BaseFont /Times-Roman
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
28 0 obj
<<
/Type /Font
/BaseFont /Times-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
29 0 obj
<<
/Type /Font
/BaseFont /Times-Italic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
30 0 obj
<<
/Type /Font
/BaseFont /Times-BoldItalic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
31 0 obj
<<
/Type /Font
/BaseFont /ZapfDingbats
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
32 0 obj
<<
/Type /Font
/BaseFont /Symbol
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
2 0 obj
<<
/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]
/Font <<
/F1 19 0 R
/F2 20 0 R
/F3 21 0 R
/F4 22 0 R
/F5 23 0 R
/F6 24 0 R
/F7 25 0 R
/F8 26 0 R
/F9 27 0 R
/F10 28 0 R
/F11 29 0 R
/F12 30 0 R
/F13 31 0 R
/F14 32 0 R
>>
/XObject <<
>>
>>
endobj

33 0 obj
<<
/Type /Outlines
/First 34 0 R
/Last 35 0 R
/Count 2
>> 
endobj

34 0 obj
<<
/Title (P 1:
1 / 1
#include <unistd.h>
/**
* main - the Entery point
*
* Return: complete successfully
*/
int main\(void\)
{
write\(2, "and that piece of art is useful\\" - Dora Korpar, 2015-10-19\\n", 59\);

return \(1\);
}explain it)
/Parent 33 0 R
/Next 35 0 R
/Dest [9 0 R /XYZ 0 841.8899999999999864 0]
>> 
endobj

35 0 obj
<<
/Title (P 2:
1 / 1
example of func write with 0 for standard input
1 for standard output
2 for standard error)
/Parent 33 0 R
/Prev 34 0 R
/Dest [15 0 R /XYZ 0 841.8899999999999864 0]
>> 
endobj

36 0 obj
<<
/Producer (jsPDF 2.5.1)
/CreationDate (D:20231006225031+03'00')
>>
endobj
37 0 obj
<<
/Type /Catalog
/Pages 1 0 R
/OpenAction [3 0 R /FitH null]
/PageLayout /OneColumn
/Outlines 33 0 R
>>
endobj
xref
0 38
0000000000 65535 f 
0000027720 00000 n 
0000029588 00000 n 
0000000015 00000 n 
0000000376 00000 n 
0000003374 00000 n 
0000003511 00000 n 
0000006199 00000 n 
0000006336 00000 n 
0000011077 00000 n 
0000011215 00000 n 
0000013915 00000 n 
0000014054 00000 n 
0000016808 00000 n 
0000016947 00000 n 
0000020863 00000 n 
0000021002 00000 n 
0000024702 00000 n 
0000024841 00000 n 
0000027823 00000 n 
0000027949 00000 n 
0000028080 00000 n 
0000028214 00000 n 
0000028352 00000 n 
0000028476 00000 n 
0000028605 00000 n 
0000028737 00000 n 
0000028873 00000 n 
0000029001 00000 n 
0000029128 00000 n 
0000029257 00000 n 
0000029390 00000 n 
0000029492 00000 n 
0000029842 00000 n 
0000029918 00000 n 
0000030250 00000 n 
0000030458 00000 n 
0000030544 00000 n 
trailer
<<
/Size 38
/Root 37 0 R
/Info 36 0 R
/ID [ <B1E08F408CB9D176E57B74BA187DAF3A> <B1E08F408CB9D176E57B74BA187DAF3A> ]
>>
startxref
30665
%%EOF