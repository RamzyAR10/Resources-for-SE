%PDF-1.3
%ºß¬à
3 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Annots [
<</Type /Annot /Subtype /Link /Rect [56.6929133858267775 792.5570866141731585 242.4529133858268324 783.3570866141732267] /Border [0 0 0] /A <</S /URI /URI (https://www.compayz.com/?utm_source=download-gpt) >> >>
]
/Contents 4 0 R
>>
endobj
4 0 obj
<<
/Length 3466
>>
stream
0.5670000000000001 w
0 G
BT
/F2 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 785.1970866141732586 Td
(Chat-GPT PDF by CompayZ - www.compayz.com) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 771.0238582677164914 Td
(Usuário: User) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 756.8506299212598378 Td
(1 / 1) Tj
T* (what is function why we use it explain the main func and the type of function and give examples) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 742.6774015748030706 Td
(Data: Tuesday, October 10, 2023 at 3:52:36 PM - \(Africa/Cairo\)) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 728.5041732283464171 Td
(URL: https://chat.openai.com/c/5f2087bd-0bbb-4b25-8737-155ce41085f1) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 660.4726771653542983 Td
(Certainly! Functions are fundamental building blocks in programming. They allow for code to be) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 637.7955118110235162 Td
(organized in a modular and reusable way. Here's a breakdown:) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 569.7640157480313974 Td
(WHAT IS A FUNCTION?) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 524.4096850393700606 Td
(A function is a named sequence of statements that perform a computation. When you define a) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 501.7325196850393354 Td
(function, you specify the name and the sequence of statements. Later, you can "call" the) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 479.0553543307086102 Td
(function by name.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 411.0238582677164914 Td
(WHY DO WE USE FUNCTIONS?) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 365.6695275590550409 Td
( 1. Reusability: If you have a piece of code that you are going to use repeatedly, it makes sense) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 342.9923622047243725 Td
(to put that code into a function and then call that function whenever needed.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 297.6380314960629221 Td
( 2. Modularity: Functions allow you to break down large programs into smaller and manageable) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 274.9608661417322537 Td
(chunks, making the code more organized and easier to understand.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 229.6065354330708033 Td
( 3. Abstraction: You can think of a function as a black box. Once you define it, you don’t need to) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 206.9293700787401349 Td
(know how it works to use it. This makes it easier to share and collaborate on code.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 161.5750393700786844 Td
( 4. Maintainability: If a change is required, you can make the change in the function's definition,) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 138.8978740157479024 Td
(and it will propagate to all calls of that function.) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 1 de 23) Tj
ET
endstream
endobj
5 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 6 0 R
>>
endobj
6 0 obj
<<
/Length 2712
>>
stream
0.5670000000000001 w
0 G
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(THE #####CODE#####<BEGINCODE>MAIN#####CODE##### FUNCTION) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(In many programming languages, the  "main"  function serves as the entry point of the program.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(When you run a program, the  "main"  function is the first to be executed. For example, in C and) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(C++, you often see:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 535.748267716535338 Td
(#include <stdio.h>) Tj
ET
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 507.4018110236219741 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 490.3939370078739444 Td
(int main\(\) {) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 467.716771653543276 Td
(    printf\("Hello, World!"\);) Tj
ET
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 445.0396062992125508 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 439.3703149606298552 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 422.3624409448818255 Td
(}) Tj
ET
0. g
85.0393700787401627 416.69314960629913 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(In this case, the  "main"  function is what gets executed when the program runs.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(TYPES OF FUNCTIONS) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
( 1. Standard Library Functions: These are functions that come with the programming language.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(Examples in Python include  "print\(\)" ,  "len\(\)" , and  "str\(\)" .) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 2 de 23) Tj
ET
endstream
endobj
7 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 8 0 R
>>
endobj
8 0 obj
<<
/Length 3208
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
( 2. User-defined Functions: These are functions that are defined by the programmers. For) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(example:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(    python) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(    ) Tj
ET
0. g
85.0393700787401627 666.1419685039369369 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 649.1340944881889072 Td
(def greet\(name\):) Tj
ET
0. g
85.0393700787401627 643.4648031496062686 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 626.4569291338582389 Td
(        return "Hello, " + name + "!") Tj
ET
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 603.7797637795274568 Td
(    ) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
( 3. Anonymous Functions or Lambda Functions: These are functions that are defined without a) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(name. In Python, for instance, you can use the  "lambda"  keyword:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(    python) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(    ) Tj
ET
0. g
85.0393700787401627 394.0159842519684048 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 377.0081102362204319 Td
(square = lambda x: x * x) Tj
ET
0. g
85.0393700787401627 371.3388188976377364 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 354.3309448818897067 Td
(    print\(square\(5\)\)  # Outputs 25) Tj
ET
0. g
85.0393700787401627 348.6616535433070112 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 331.6537795275589815 Td
(    ) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
( 4. Recursive Functions: A function that calls itself either directly or indirectly. For example, a) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(factorial function:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(    python) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(    ) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 3 de 23) Tj
ET
endstream
endobj
9 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 10 0 R
>>
endobj
10 0 obj
<<
/Length 3804
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 785.1970866141732586 Td
(def factorial\(n\):) Tj
ET
0. g
85.0393700787401627 779.5277952755905062 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 762.5199212598424765 Td
(        if n == 1:) Tj
ET
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 739.8427559055118081 Td
(            return 1) Tj
ET
0. g
85.0393700787401627 734.1734645669290558 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 717.1655905511811397 Td
(        else:) Tj
ET
0. g
85.0393700787401627 711.4962992125983874 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 694.4884251968503577 Td
(            return n * factorial\(n-1\)) Tj
ET
0. g
85.0393700787401627 688.819133858267719 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 671.8112598425196893 Td
(    ) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
( 5. Generator Functions: These produce a sequence of results instead of a single value. They) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(use the  "yield"  keyword. In Python:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(    python) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(    ) Tj
ET
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 445.0396062992125508 Td
(def simple_generator\(\):) Tj
ET
0. g
85.0393700787401627 439.3703149606298552 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 422.3624409448818255 Td
(        yield 1) Tj
ET
0. g
85.0393700787401627 416.69314960629913 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 399.6852755905511003 Td
(        yield 2) Tj
ET
0. g
85.0393700787401627 394.0159842519684048 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 377.0081102362204319 Td
(        yield 3) Tj
ET
0. g
85.0393700787401627 371.3388188976377364 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 354.3309448818897067 Td
(    ) Tj
ET
0. g
85.0393700787401627 348.6616535433070112 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 331.6537795275589815 Td
(    for value in simple_generator\(\):) Tj
ET
0. g
85.0393700787401627 325.984488188976286 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 308.9766141732283131 Td
(        print\(value\)) Tj
ET
0. g
85.0393700787401627 303.3073228346455608 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 286.2994488188975311 Td
(    ) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
( 6. Nested Functions: A function defined inside another function:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(    python) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 4 de 23) Tj
ET
endstream
endobj
11 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 12 0 R
>>
endobj
12 0 obj
<<
/Length 3486
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(    ) Tj
ET
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 739.8427559055118081 Td
(def outer_function\(\):) Tj
ET
0. g
85.0393700787401627 734.1734645669290558 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 717.1655905511811397 Td
(        def inner_function\(\):) Tj
ET
0. g
85.0393700787401627 711.4962992125983874 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 694.4884251968503577 Td
(            print\("Inside inner!"\)) Tj
ET
0. g
85.0393700787401627 688.819133858267719 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 671.8112598425196893 Td
(        inner_function\(\)) Tj
ET
0. g
85.0393700787401627 666.1419685039369369 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 649.1340944881889072 Td
(        print\("Inside outer!"\)) Tj
ET
0. g
85.0393700787401627 643.4648031496062686 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 626.4569291338582389 Td
(    ) Tj
ET
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 603.7797637795274568 Td
(    outer_function\(\)) Tj
ET
0. g
85.0393700787401627 598.1104724409448181 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 581.1025984251967884 Td
(    ) Tj
ET
1. g
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(EXAMPLE) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(Here's a simple example in Python:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(python) Tj
ET
1. g
0. g
85.0393700787401627 325.984488188976286 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 308.9766141732283131 Td
(# User-defined function) Tj
ET
0. g
85.0393700787401627 303.3073228346455608 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 286.2994488188975311 Td
(def add\(a, b\):) Tj
ET
0. g
85.0393700787401627 280.6301574803148924 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 263.6222834645668627 Td
(    return a + b) Tj
ET
0. g
85.0393700787401627 257.9529921259841672 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 235.2758267716534419 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 218.2679527559054122 Td
(# Calling the function) Tj
ET
0. g
85.0393700787401627 212.5986614173227451 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 195.5907874015747439 Td
(result = add\(10, 20\)) Tj
ET
0. g
85.0393700787401627 189.9214960629920199 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 172.9136220472439618 Td
(print\(result\)  # Outputs 30) Tj
ET
0. g
85.0393700787401627 167.2443307086613231 425.2012598425196188 -22.677165354330711 re
f
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 5 de 23) Tj
ET
endstream
endobj
13 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 14 0 R
>>
endobj
14 0 obj
<<
/Length 2946
>>
stream
0.5670000000000001 w
0 G
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(This example showcases a user-defined function named  "add"  which takes two arguments and) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(returns their sum. The function is then called, and the result is printed.) Tj
ET
0.78 g
56.6929133858267775 688.819133858267719 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(P 1:) Tj
ET
0.78 g
56.6929133858267775 666.1419685039369369 481.8941732283464034 -22.677165354330711 re
f
0.78 g
56.6929133858267775 643.4648031496062686 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(make it in c) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
(Certainly! Let's go over the concept of functions in the context of the C programming language.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(WHAT IS A FUNCTION IN C?) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(In C, a function is a group of statements that together perform a task. Each C program has at) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(least one function, which is  "main\(\)" , and all the most trivial programs can define additional) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(functions.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(WHY DO WE USE FUNCTIONS IN C?) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(The reasons are largely the same as in other languages:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
( 1. Reusability: Avoid repetition of code.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
( 2. Modularity: Organize the program into smaller, manageable, and logical modules or pieces.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
( 3. Abstraction: Hide complex implementation details and expose only the necessary) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
(functionalities.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
( 4. Maintainability: Change one function's definition and it updates everywhere it's called.) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 6 de 23) Tj
ET
endstream
endobj
15 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 16 0 R
>>
endobj
16 0 obj
<<
/Length 2583
>>
stream
0.5670000000000001 w
0 G
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(THE #####CODE#####<BEGINCODE>MAIN#####CODE##### FUNCTION IN C) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(In C, the  "main"  function is where the program starts execution. It's the entry point:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 603.7797637795274568 Td
(#include <stdio.h>) Tj
ET
0. g
85.0393700787401627 598.1104724409448181 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 575.4333070866141497 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 558.42543307086612 Td
(int main\(\) {) Tj
ET
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 535.748267716535338 Td
(    printf\("Hello, World!\\n"\);) Tj
ET
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 513.0711023622046696 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 507.4018110236219741 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 490.3939370078739444 Td
(}) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(TYPES OF FUNCTIONS IN C) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
( 1. Standard Library Functions: Pre-defined functions included in C, like  "printf\(\)" ,  "scanf\(\)" , ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
("strcpy\(\)" , etc.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
( 2. User-defined Functions: Functions created by the programmer for a specific task. For) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(example:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(c) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 7 de 23) Tj
ET
endstream
endobj
17 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 18 0 R
>>
endobj
18 0 obj
<<
/Length 3541
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 785.1970866141732586 Td
(int add\(int a, int b\) {) Tj
ET
0. g
85.0393700787401627 779.5277952755905062 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 762.5199212598424765 Td
(    return a + b;) Tj
ET
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 739.8427559055118081 Td
(}) Tj
ET
0. g
85.0393700787401627 734.1734645669290558 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(EXAMPLE IN C) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(Let's use the addition function:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 445.0396062992125508 Td
(#include <stdio.h>) Tj
ET
0. g
85.0393700787401627 439.3703149606298552 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 416.69314960629913 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 399.6852755905511003 Td
(// User-defined function declaration) Tj
ET
0. g
85.0393700787401627 394.0159842519684048 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 377.0081102362204319 Td
(int add\(int a, int b\);) Tj
ET
0. g
85.0393700787401627 371.3388188976377364 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 348.6616535433070112 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 331.6537795275589815 Td
(int main\(\) {) Tj
ET
0. g
85.0393700787401627 325.984488188976286 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 308.9766141732283131 Td
(    int sum;) Tj
ET
0. g
85.0393700787401627 303.3073228346455608 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 286.2994488188975311 Td
(    sum = add\(10, 20\);) Tj
ET
0. g
85.0393700787401627 280.6301574803148924 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 263.6222834645668627 Td
(    printf\("The sum is: %d\\n", sum\);) Tj
ET
0. g
85.0393700787401627 257.9529921259841672 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 240.9451181102361943 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 235.2758267716534419 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 218.2679527559054122 Td
(}) Tj
ET
0. g
85.0393700787401627 212.5986614173227451 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 189.9214960629920199 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 172.9136220472439618 Td
(// User-defined function definition) Tj
ET
0. g
85.0393700787401627 167.2443307086613231 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 150.2364566929132934 Td
(int add\(int a, int b\) {) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 8 de 23) Tj
ET
endstream
endobj
19 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 20 0 R
>>
endobj
20 0 obj
<<
/Length 3420
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 785.1970866141732586 Td
(    return a + b;) Tj
ET
0. g
85.0393700787401627 779.5277952755905062 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 762.5199212598424765 Td
(}) Tj
ET
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(In the code above, there's a declaration for the  "add"  function at the top, followed by the  "main") Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
( function where the  "add"  function is called. The definition for the  "add"  function \(what it does\)) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(comes after  "main" . This structure is common in C to ensure that by the time a function is) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
(called, it has been declared and the compiler knows about it.) Tj
ET
0.78 g
56.6929133858267775 552.7561417322833677 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(P 2:) Tj
ET
0.78 g
56.6929133858267775 530.0789763779526993 481.8941732283464034 -22.677165354330711 re
f
0.78 g
56.6929133858267775 507.4018110236219741 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(more about main func and his return 0) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(Certainly! The  "main\(\)"  function holds a special place in C programming \(as well as in many) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(other programming languages\). Let's delve deeper into its characteristics and the significance of) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(its return value.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(THE #####CODE#####<BEGINCODE>MAIN\(\)#####CODE##### FUNCTION IN C) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
( 1. Entry Point:  "main\(\)"  is the entry point of a C program. Whenever a C program is executed,) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(the execution starts from the  "main\(\)"  function.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
( 2. Compulsory Presence: Every C program must have one  "main\(\)"  function. Without it, a C) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
(program won't compile. If you have multiple files in a project, only one of those files should) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(contain a  "main\(\)"  function.) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 9 de 23) Tj
ET
endstream
endobj
21 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 22 0 R
>>
endobj
22 0 obj
<<
/Length 3792
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
( 3. Standard Signature: The most commonly used signatures for  "main"  are:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(    c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(     "int main\(void\) { /*...*/ }" ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(    and) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(    c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(     "int main\(int argc, char *argv[]\) { /*...*/ }" ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(    The first is used when the program doesn't need command-line arguments. The second is) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(used when it does.  "argc"  represents the number of command-line arguments, while  "argv"  is) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(an array of strings representing the individual arguments.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
( 4. Return Type: The return type of  "main\(\)"  is typically  "int" . This means the function returns) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(an integer value when it completes execution.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(THE RETURN VALUE) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
( 1. Indication of Success or Failure: By convention, a return value of  "0"  from  "main\(\)" ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(indicates successful execution of the program. Conversely, returning a non-zero value typically) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(indicates an error or abnormal termination. This convention is useful when the program is called) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(from scripts or other programs, as the return value can be checked to see if the program ran) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(successfully.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
( 2. Exit Status: The return value of the  "main\(\)"  function becomes the exit status of the process.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(This can be captured in operating systems like Unix or Linux. For instance, after running a) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(program, you can check the exit status with the  "echo $?"  command in the shell.) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 10 de 23) Tj
ET
endstream
endobj
23 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 24 0 R
>>
endobj
24 0 obj
<<
/Length 3903
>>
stream
0.5670000000000001 w
0 G
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
( 3. The  "return"  statement: The  "return"  statement in the  "main\(\)"  function is not mandatory. If) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(it's not present, the C99 standard specifies that the value returned is equivalent to calling  "return) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(0;" . This means that if you omit the return statement in the  "main\(\)"  function in a C99-compliant) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(compiler, it will implicitly return  "0" .) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
( 4. Explicit use of  "exit\(\)" : Instead of relying on the return statement in  "main\(\)" , you can also) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(use the  "exit\(\)"  function \(from the  "stdlib.h"  header\) to terminate the program with a specific) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(status. For instance,  "exit\(0\);"  would exit the program and indicate successful completion.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(EXAMPLE:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(Here's a simple C program illustrating the use of the  "main\(\)"  function and its return value:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 394.0159842519684048 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 377.0081102362204319 Td
(#include <stdio.h>) Tj
ET
0. g
85.0393700787401627 371.3388188976377364 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 354.3309448818897067 Td
(#include <stdlib.h>) Tj
ET
0. g
85.0393700787401627 348.6616535433070112 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 325.984488188976286 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 308.9766141732283131 Td
(int main\(int argc, char *argv[]\) {) Tj
ET
0. g
85.0393700787401627 303.3073228346455608 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 286.2994488188975311 Td
(    if \(argc != 2\) {) Tj
ET
0. g
85.0393700787401627 280.6301574803148924 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 263.6222834645668627 Td
(        printf\("Usage: %s <message>\\n", argv[0]\);) Tj
ET
0. g
85.0393700787401627 257.9529921259841672 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 240.9451181102361943 Td
(        return 1; // Indicates error due to incorrect number of) Tj
ET
0. g
85.0393700787401627 235.2758267716534419 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 218.2679527559054122 Td
(arguments) Tj
ET
0. g
85.0393700787401627 212.5986614173227451 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 195.5907874015747439 Td
(    }) Tj
ET
0. g
85.0393700787401627 189.9214960629920199 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 167.2443307086613231 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 150.2364566929132934 Td
(    printf\("You entered: %s\\n", argv[1]\);) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 11 de 23) Tj
ET
endstream
endobj
25 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 26 0 R
>>
endobj
26 0 obj
<<
/Length 3187
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 785.1970866141732586 Td
(    return 0; // Indicates successful execution) Tj
ET
0. g
85.0393700787401627 779.5277952755905062 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 762.5199212598424765 Td
(}) Tj
ET
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(In this program, if the user does not provide exactly one command-line argument \(aside from the) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(program name\), the program prints a usage message and returns  "1" , indicating an error.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(Otherwise, it prints the provided message and returns  "0" , indicating success.) Tj
ET
0.78 g
56.6929133858267775 575.4333070866141497 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(P 3:) Tj
ET
0.78 g
56.6929133858267775 552.7561417322833677 481.8941732283464034 -22.677165354330711 re
f
0.78 g
56.6929133858267775 530.0789763779526993 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(void func vs return func) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(In programming, particularly in languages like C and C++, functions can either return a value or) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(not. The distinction between these two is often characterized by the return type specified in the) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(function declaration. Here's a comparison between functions that return values \( "return" ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(functions\) and those that don't \( "void"  functions\):) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(#####CODE#####<BEGINCODE>VOID#####CODE##### FUNCTIONS) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(A  "void"  function doesn't return any value. When you see  "void"  as the return type of a) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(function, it means that the function doesn't send any data back from where it was called.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
(EXAMPLE:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(c) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 12 de 23) Tj
ET
endstream
endobj
27 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 28 0 R
>>
endobj
28 0 obj
<<
/Length 2962
>>
stream
0.5670000000000001 w
0 G
1. g
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 739.8427559055118081 Td
(#include <stdio.h>) Tj
ET
0. g
85.0393700787401627 734.1734645669290558 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 711.4962992125983874 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 694.4884251968503577 Td
(void displayMessage\(\) {) Tj
ET
0. g
85.0393700787401627 688.819133858267719 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 671.8112598425196893 Td
(    printf\("Hello from a void function!\\n"\);) Tj
ET
0. g
85.0393700787401627 666.1419685039369369 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 649.1340944881889072 Td
(}) Tj
ET
0. g
85.0393700787401627 643.4648031496062686 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 603.7797637795274568 Td
(int main\(\) {) Tj
ET
0. g
85.0393700787401627 598.1104724409448181 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 581.1025984251967884 Td
(    displayMessage\(\);) Tj
ET
0. g
85.0393700787401627 575.4333070866141497 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 558.42543307086612 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 535.748267716535338 Td
(}) Tj
ET
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(In this example,  "displayMessage"  is a  "void"  function. It performs an action \(printing a) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(message\) but doesn't return any value.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(FUNCTIONS WITH A RETURN TYPE) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(Functions that are not  "void"  return a value. This value can be of any data type:  "int" ,  "float" , ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
("char" ,  "double" , custom types, etc.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
(EXAMPLE:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(c) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 13 de 23) Tj
ET
endstream
endobj
29 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 30 0 R
>>
endobj
30 0 obj
<<
/Length 3376
>>
stream
0.5670000000000001 w
0 G
1. g
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 739.8427559055118081 Td
(#include <stdio.h>) Tj
ET
0. g
85.0393700787401627 734.1734645669290558 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 711.4962992125983874 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 694.4884251968503577 Td
(int add\(int a, int b\) {) Tj
ET
0. g
85.0393700787401627 688.819133858267719 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 671.8112598425196893 Td
(    return a + b;) Tj
ET
0. g
85.0393700787401627 666.1419685039369369 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 649.1340944881889072 Td
(}) Tj
ET
0. g
85.0393700787401627 643.4648031496062686 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 603.7797637795274568 Td
(int main\(\) {) Tj
ET
0. g
85.0393700787401627 598.1104724409448181 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 581.1025984251967884 Td
(    int result = add\(5, 10\);) Tj
ET
0. g
85.0393700787401627 575.4333070866141497 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 558.42543307086612 Td
(    printf\("The sum is: %d\\n", result\);) Tj
ET
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 535.748267716535338 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 513.0711023622046696 Td
(}) Tj
ET
0. g
85.0393700787401627 507.4018110236219741 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(In this example, the  "add"  function returns an  "int"  value. It takes two integer parameters, adds) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(them, and returns the result.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(KEY DIFFERENCES:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
( 1. Return Type: The primary distinction is in the return type. A  "void"  function has  "void"  as its) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(return type, indicating it doesn't return anything. A  "return"  function will have a specific type \(like) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
( "int" ,  "float" , etc.\), indicating it will return a value of that type.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
( 2. Use Cases:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(    ) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 14 de 23) Tj
ET
endstream
endobj
31 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 32 0 R
>>
endobj
32 0 obj
<<
/Length 4096
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(    *  "void"  functions: Used when you want the function to perform some task but don't need it to) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(send back any data. Examples might include functions that print messages, modify global) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(variables, or write to a file.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(    *  "return"  functions: Used when you want the function to compute some data and send it) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(back. Examples might include mathematical operations, data retrieval functions, etc.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
( 3. Return Statement:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(    *  "void"  functions: Generally, they don't have a  "return"  statement, but they can have a ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
("return;"  statement without any value, used to exit the function prematurely.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(    *  "return"  functions: Must have a  "return"  statement that returns a value \(or values\)) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(matching the declared return type.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(In summary, whether you choose to use a  "void"  function or a function with a return type) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(depends on the needs of your program. If you want your function to send data back, give it a) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(specific return type and ensure it returns a value of that type. If you just want it to perform an) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(action without returning data, use  "void" .) Tj
ET
0.78 g
56.6929133858267775 394.0159842519684048 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(P 4:) Tj
ET
0.78 g
56.6929133858267775 371.3388188976377364 481.8941732283464034 -22.677165354330711 re
f
0.78 g
56.6929133858267775 348.6616535433070112 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(what is the diff when we call it and his deal with printf) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(The difference between calling a  "void"  function and a function that returns a value becomes) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(particularly evident when combined with functions like  "printf\(\)"  in C. Let's dissect this by) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(understanding how both types of functions can be used with  "printf\(\)" .) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
( 1.  "void"  Functions:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(Since  "void"  functions don't return any value, you cannot directly use them inside  "printf\(\)"  to) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 15 de 23) Tj
ET
endstream
endobj
33 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 34 0 R
>>
endobj
34 0 obj
<<
/Length 3125
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(print a result.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(For example:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 643.4648031496062686 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 626.4569291338582389 Td
(void displayMessage\(\) {) Tj
ET
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 603.7797637795274568 Td
(    printf\("Hello from a void function!\\n"\);) Tj
ET
0. g
85.0393700787401627 598.1104724409448181 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 581.1025984251967884 Td
(}) Tj
ET
0. g
85.0393700787401627 575.4333070866141497 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 535.748267716535338 Td
(int main\(\) {) Tj
ET
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 513.0711023622046696 Td
(    printf\("The message is: "\);) Tj
ET
0. g
85.0393700787401627 507.4018110236219741 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 490.3939370078739444 Td
(    displayMessage\(\);  // This is valid, but it's not using) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 467.716771653543276 Td
(displayMessage\(\) inside printf\(\)) Tj
ET
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 445.0396062992125508 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 439.3703149606298552 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 422.3624409448818255 Td
(}) Tj
ET
0. g
85.0393700787401627 416.69314960629913 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(You cannot do something like:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
( "printf\("The message is: %s", displayMessage\(\)\);  // This is INVALID since displayMessage\(\)) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(doesn't return anything" ) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
( 2. Functions with a Return Type:) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 16 de 23) Tj
ET
endstream
endobj
35 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 36 0 R
>>
endobj
36 0 obj
<<
/Length 3103
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(For functions that return a value, you can directly use them inside  "printf\(\)"  to print the returned) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(value.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(For example:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 603.7797637795274568 Td
(int add\(int a, int b\) {) Tj
ET
0. g
85.0393700787401627 598.1104724409448181 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 581.1025984251967884 Td
(    return a + b;) Tj
ET
0. g
85.0393700787401627 575.4333070866141497 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 558.42543307086612 Td
(}) Tj
ET
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 513.0711023622046696 Td
(int main\(\) {) Tj
ET
0. g
85.0393700787401627 507.4018110236219741 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 490.3939370078739444 Td
(    printf\("The sum of 5 and 10 is: %d\\n", add\(5, 10\)\);  // This) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 467.716771653543276 Td
(is valid) Tj
ET
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 445.0396062992125508 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 439.3703149606298552 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 422.3624409448818255 Td
(}) Tj
ET
0. g
85.0393700787401627 416.69314960629913 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(Here, the  "add\(\)"  function returns an integer value which  "printf\(\)"  then uses as one of its) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(arguments.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(KEY DIFFERENCES IN CONTEXT OF) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
(#####CODE#####<BEGINCODE>PRINTF\(\)#####CODE#####:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
( 1. Usability Inside  "printf\(\)" :) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 17 de 23) Tj
ET
endstream
endobj
37 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 38 0 R
>>
endobj
38 0 obj
<<
/Length 4100
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(    *  "void"  functions: Cannot be used directly inside  "printf\(\)"  since they don't return a value to) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(be printed.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(    *  "return"  functions: Can be used directly inside  "printf\(\)"  if the expected placeholder \( "%d") Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(,  "%s" ,  "%f" , etc.\) matches the type of the returned value.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
( 2. Flow:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(    *  "void"  functions: If you want to print something from a  "void"  function, the printing needs to) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
(happen inside the function itself.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(    *  "return"  functions: They return a value which can then be printed outside the function,) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(offering more flexibility in how and where you display the returned value.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
( 3. Flexibility:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(    *  "void"  functions: They do a specific task \(like printing\) and don't offer flexibility outside of) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(that.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(    *  "return"  functions: The returned value can be used in multiple ways, not just for printing.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(You can assign it to variables, use it in calculations, pass it to other functions, etc.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(In essence, when dealing with  "printf\(\)" , it's crucial to understand if the function you're dealing) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(with returns a value. If it does, you can use it directly with  "printf\(\)" . If it doesn't, you'll need to) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(handle the printing within the function or find another way to display the information.) Tj
ET
0.78 g
56.6929133858267775 257.9529921259841672 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(P 5:) Tj
ET
0.78 g
56.6929133858267775 235.2758267716534419 481.8941732283464034 -22.677165354330711 re
f
0.78 g
56.6929133858267775 212.5986614173227451 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
(what is the diff between call by ref and call by value \(examples , full details explain\)) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(Certainly! The concepts of "call by value" and "call by reference" are fundamental in) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 18 de 23) Tj
ET
endstream
endobj
39 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 40 0 R
>>
endobj
40 0 obj
<<
/Length 3192
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(programming, and understanding the difference between the two is crucial for effective coding.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(Let's delve into the details.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(CALL BY VALUE) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(EXPLANATION:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
(In call by value, the function receives only a copy of the actual arguments \(values\), and not the) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(original variables themselves. This means any modifications made to the parameters inside the) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(function do not affect the original values in the calling function.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(EXAMPLE IN C:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 371.3388188976377364 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 354.3309448818897067 Td
(#include <stdio.h>) Tj
ET
0. g
85.0393700787401627 348.6616535433070112 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 325.984488188976286 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 308.9766141732283131 Td
(void modifyValue\(int x\) {) Tj
ET
0. g
85.0393700787401627 303.3073228346455608 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 286.2994488188975311 Td
(    x = x + 10;) Tj
ET
0. g
85.0393700787401627 280.6301574803148924 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 263.6222834645668627 Td
(    printf\("Inside modifyValue: %d\\n", x\);) Tj
ET
0. g
85.0393700787401627 257.9529921259841672 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 240.9451181102361943 Td
(}) Tj
ET
0. g
85.0393700787401627 235.2758267716534419 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 212.5986614173227451 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 195.5907874015747439 Td
(int main\(\) {) Tj
ET
0. g
85.0393700787401627 189.9214960629920199 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 172.9136220472439618 Td
(    int num = 5;) Tj
ET
0. g
85.0393700787401627 167.2443307086613231 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 150.2364566929132934 Td
(    modifyValue\(num\);) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 19 de 23) Tj
ET
endstream
endobj
41 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 42 0 R
>>
endobj
42 0 obj
<<
/Length 2461
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 785.1970866141732586 Td
(    printf\("Inside main: %d\\n", num\);) Tj
ET
0. g
85.0393700787401627 779.5277952755905062 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 762.5199212598424765 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 739.8427559055118081 Td
(}) Tj
ET
0. g
85.0393700787401627 734.1734645669290558 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F2 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(Output:) Tj
ET
1. g
1. g
BT
/F2 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
(yaml) Tj
ET
1. g
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 513.0711023622046696 Td
(Inside modifyValue: 15) Tj
ET
0. g
85.0393700787401627 507.4018110236219741 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 490.3939370078739444 Td
(Inside main: 5) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(As seen in the output, the value inside  "modifyValue"  changes but the value of  "num"  inside ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
("main"  remains unaffected.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(CALL BY REFERENCE) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(EXPLANATION:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(In call by reference, the function receives references \(or addresses\) to the original variables.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(This means any modifications made to the parameters inside the function reflect in the original) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 20 de 23) Tj
ET
endstream
endobj
43 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 44 0 R
>>
endobj
44 0 obj
<<
/Length 3140
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(values in the calling function. In C, this is achieved using pointers.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(EXAMPLE IN C:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 603.7797637795274568 Td
(#include <stdio.h>) Tj
ET
0. g
85.0393700787401627 598.1104724409448181 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 575.4333070866141497 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 558.42543307086612 Td
(void modifyReference\(int *x\) {) Tj
ET
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 535.748267716535338 Td
(    *x = *x + 10;) Tj
ET
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 513.0711023622046696 Td
(    printf\("Inside modifyReference: %d\\n", *x\);) Tj
ET
0. g
85.0393700787401627 507.4018110236219741 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 490.3939370078739444 Td
(}) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 445.0396062992125508 Td
(int main\(\) {) Tj
ET
0. g
85.0393700787401627 439.3703149606298552 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 422.3624409448818255 Td
(    int num = 5;) Tj
ET
0. g
85.0393700787401627 416.69314960629913 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 399.6852755905511003 Td
(    modifyReference\(&num\);) Tj
ET
0. g
85.0393700787401627 394.0159842519684048 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 377.0081102362204319 Td
(    printf\("Inside main: %d\\n", num\);) Tj
ET
0. g
85.0393700787401627 371.3388188976377364 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 354.3309448818897067 Td
(    return 0;) Tj
ET
0. g
85.0393700787401627 348.6616535433070112 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 331.6537795275589815 Td
(}) Tj
ET
0. g
85.0393700787401627 325.984488188976286 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F2 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(Output:) Tj
ET
1. g
1. g
BT
/F2 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(yaml) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 21 de 23) Tj
ET
endstream
endobj
45 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 46 0 R
>>
endobj
46 0 obj
<<
/Length 3292
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 785.1970866141732586 Td
(Inside modifyReference: 15) Tj
ET
0. g
85.0393700787401627 779.5277952755905062 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 762.5199212598424765 Td
(Inside main: 15) Tj
ET
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(In the output, you can see that modifying the value inside  "modifyReference"  affected the value) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(of  "num"  in the  "main"  function.) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(KEY DIFFERENCES:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
( 1. Parameter Passing:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(    * Call by Value: A copy of the actual argument's value is passed to the function.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(    * Call by Reference: The address of the actual argument \(reference\) is passed, typically using) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(pointers in C.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
( 2. Effect on Original Data:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(    * Call by Value: Changing the parameter inside the function doesn't affect the original value.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(    * Call by Reference: Changes to the parameter inside the function reflect in the original) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(variable.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
( 3. Memory:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
(    * Call by Value: Uses memory for the copy of variables. If you're passing large structures or) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(arrays, it might be less efficient due to this duplication.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(    * Call by Reference: More memory efficient, as only the address is passed, not a duplicate of) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 22 de 23) Tj
ET
endstream
endobj
47 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 48 0 R
>>
endobj
48 0 obj
<<
/Length 2556
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(the data.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
( 4. Safety:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(    * Call by Value: Generally safer, because the function works on a copy of the data, ensuring) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(the original data is not accidentally modified.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(    * Call by Reference: Riskier, as the function directly operates on the original data, which can) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(be a source of bugs if not handled correctly.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
( 5. Use Cases:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(    * Call by Value: When you want to ensure that the original data remains unchanged) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(regardless of the operations inside the function.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(    * Call by Reference: When you intend to modify the original data, or when passing large data) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(structures where memory efficiency is a concern.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(In summary, the method you choose for passing parameters depends on the needs of your) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(program. Knowing the differences between call by value and call by reference is crucial for) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(designing functions that behave as intended.) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 23 de 23) Tj
ET
endstream
endobj
1 0 obj
<</Type /Pages
/Kids [3 0 R 5 0 R 7 0 R 9 0 R 11 0 R 13 0 R 15 0 R 17 0 R 19 0 R 21 0 R 23 0 R 25 0 R 27 0 R 29 0 R 31 0 R 33 0 R 35 0 R 37 0 R 39 0 R 41 0 R 43 0 R 45 0 R 47 0 R ]
/Count 23
>>
endobj
49 0 obj
<<
/Type /Font
/BaseFont /Helvetica
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
50 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
51 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
52 0 obj
<<
/Type /Font
/BaseFont /Helvetica-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
53 0 obj
<<
/Type /Font
/BaseFont /Courier
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
54 0 obj
<<
/Type /Font
/BaseFont /Courier-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
55 0 obj
<<
/Type /Font
/BaseFont /Courier-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
56 0 obj
<<
/Type /Font
/BaseFont /Courier-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
57 0 obj
<<
/Type /Font
/BaseFont /Times-Roman
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
58 0 obj
<<
/Type /Font
/BaseFont /Times-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
59 0 obj
<<
/Type /Font
/BaseFont /Times-Italic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
60 0 obj
<<
/Type /Font
/BaseFont /Times-BoldItalic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
61 0 obj
<<
/Type /Font
/BaseFont /ZapfDingbats
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
62 0 obj
<<
/Type /Font
/BaseFont /Symbol
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
2 0 obj
<<
/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]
/Font <<
/F1 49 0 R
/F2 50 0 R
/F3 51 0 R
/F4 52 0 R
/F5 53 0 R
/F6 54 0 R
/F7 55 0 R
/F8 56 0 R
/F9 57 0 R
/F10 58 0 R
/F11 59 0 R
/F12 60 0 R
/F13 61 0 R
/F14 62 0 R
>>
/XObject <<
>>
>>
endobj

63 0 obj
<<
/Type /Outlines
/First 64 0 R
/Last 68 0 R
/Count 5
>> 
endobj

64 0 obj
<<
/Title (P 1:
1 / 1
make it in c)
/Parent 63 0 R
/Next 65 0 R
/Dest [13 0 R /XYZ 0 841.8899999999999864 0]
>> 
endobj

65 0 obj
<<
/Title (P 2:
1 / 1
more about main func and his return 0)
/Parent 63 0 R
/Prev 64 0 R
/Next 66 0 R
/Dest [19 0 R /XYZ 0 841.8899999999999864 0]
>> 
endobj

66 0 obj
<<
/Title (P 3:
1 / 1
void func vs return func)
/Parent 63 0 R
/Prev 65 0 R
/Next 67 0 R
/Dest [25 0 R /XYZ 0 841.8899999999999864 0]
>> 
endobj

67 0 obj
<<
/Title (P 4:
1 / 1
what is the diff when we call it and his deal with printf)
/Parent 63 0 R
/Prev 66 0 R
/Next 68 0 R
/Dest [31 0 R /XYZ 0 841.8899999999999864 0]
>> 
endobj

68 0 obj
<<
/Title (P 5:
1 / 1
what is the diff between call by ref and call by value \(examples , full details explain\))
/Parent 63 0 R
/Prev 67 0 R
/Dest [37 0 R /XYZ 0 841.8899999999999864 0]
>> 
endobj

69 0 obj
<<
/Producer (jsPDF 2.5.1)
/CreationDate (D:20231010155236+03'00')
>>
endobj
70 0 obj
<<
/Type /Catalog
/Pages 1 0 R
/OpenAction [3 0 R /FitH null]
/PageLayout /OneColumn
/Outlines 63 0 R
>>
endobj
xref
0 71
0000000000 65535 f 
0000080096 00000 n 
0000082070 00000 n 
0000000015 00000 n 
0000000376 00000 n 
0000003894 00000 n 
0000004031 00000 n 
0000006795 00000 n 
0000006932 00000 n 
0000010192 00000 n 
0000010330 00000 n 
0000014187 00000 n 
0000014326 00000 n 
0000017865 00000 n 
0000018004 00000 n 
0000021003 00000 n 
0000021142 00000 n 
0000023778 00000 n 
0000023917 00000 n 
0000027511 00000 n 
0000027650 00000 n 
0000031123 00000 n 
0000031262 00000 n 
0000035107 00000 n 
0000035246 00000 n 
0000039202 00000 n 
0000039341 00000 n 
0000042581 00000 n 
0000042720 00000 n 
0000045735 00000 n 
0000045874 00000 n 
0000049303 00000 n 
0000049442 00000 n 
0000053591 00000 n 
0000053730 00000 n 
0000056908 00000 n 
0000057047 00000 n 
0000060203 00000 n 
0000060342 00000 n 
0000064495 00000 n 
0000064634 00000 n 
0000067879 00000 n 
0000068018 00000 n 
0000070532 00000 n 
0000070671 00000 n 
0000073864 00000 n 
0000074003 00000 n 
0000077348 00000 n 
0000077487 00000 n 
0000080305 00000 n 
0000080431 00000 n 
0000080562 00000 n 
0000080696 00000 n 
0000080834 00000 n 
0000080958 00000 n 
0000081087 00000 n 
0000081219 00000 n 
0000081355 00000 n 
0000081483 00000 n 
0000081610 00000 n 
0000081739 00000 n 
0000081872 00000 n 
0000081974 00000 n 
0000082324 00000 n 
0000082400 00000 n 
0000082530 00000 n 
0000082698 00000 n 
0000082853 00000 n 
0000083041 00000 n 
0000083249 00000 n 
0000083335 00000 n 
trailer
<<
/Size 71
/Root 70 0 R
/Info 69 0 R
/ID [ <AF8646D9D85237D6E7E6621DE4889E11> <AF8646D9D85237D6E7E6621DE4889E11> ]
>>
startxref
83456
%%EOF