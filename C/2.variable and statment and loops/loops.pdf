%PDF-1.3
%ºß¬à
3 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Annots [
<</Type /Annot /Subtype /Link /Rect [56.6929133858267775 792.5570866141731585 242.4529133858268324 783.3570866141732267] /Border [0 0 0] /A <</S /URI /URI (https://www.compayz.com/?utm_source=download-gpt) >> >>
]
/Contents 4 0 R
>>
endobj
4 0 obj
<<
/Length 3713
>>
stream
0.5670000000000001 w
0 G
BT
/F2 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 785.1970866141732586 Td
(Chat-GPT PDF by CompayZ - www.compayz.com) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 771.0238582677164914 Td
(Usuário: User) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 756.8506299212598378 Td
(1 / 1) Tj
T* (what the diff between the for and while and do ... while when we use each other) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 742.6774015748030706 Td
(Data: Tuesday, October 10, 2023 at 3:37:02 PM - \(Africa/Cairo\)) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0 g
56.6929133858267775 728.5041732283464171 Td
(URL: https://chat.openai.com/c/5100f8f4-7333-4947-9c1b-56bd5554e4ca) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 660.4726771653542983 Td
(Certainly! The  "for" ,  "while" , and  "do...while"  loops are all control flow structures in) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 637.7955118110235162 Td
(programming used to repeat a block of code, but they differ in how and when they execute those) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 615.1183464566928478 Td
(repetitions. Let's break them down:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 569.7640157480313974 Td
( 1.  "for"  Loop:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 547.086850393700729 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 524.4096850393700606 Td
(    * Use when: You know beforehand how many times you want to execute a statement or a) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 501.7325196850393354 Td
(block of statements.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 479.0553543307086102 Td
(    * Syntax \(in languages like C, C++, Java\):) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 456.378188976377885 Td
(      c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 433.7010236220471597 Td
(      ) Tj
ET
0. g
85.0393700787401627 405.3545669291337958 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 388.3466929133857661 Td
(for\(initialization; condition; update\) {) Tj
ET
0. g
85.0393700787401627 382.6774015748030706 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 365.6695275590550409 Td
(          // code to be executed) Tj
ET
0. g
85.0393700787401627 360.0002362204723454 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 342.9923622047243725 Td
(      }) Tj
ET
0. g
85.0393700787401627 337.323070866141677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 320.3151968503935905 Td
(      ) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 252.2837007874014716 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 229.6065354330708033 Td
(    * Example: If you want to print numbers from 1 to 5:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 206.9293700787401349 Td
(      c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 184.2522047244093528 Td
(      ) Tj
ET
0. g
85.0393700787401627 155.9057480314959605 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 138.8978740157479024 Td
(for\(int i=1; i<=5; i++\) {) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 1 de 11) Tj
ET
endstream
endobj
5 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 6 0 R
>>
endobj
6 0 obj
<<
/Length 3563
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 785.1970866141732586 Td
(          printf\("%d\\n", i\);) Tj
ET
0. g
85.0393700787401627 779.5277952755905062 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 762.5199212598424765 Td
(      }) Tj
ET
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 739.8427559055118081 Td
(      ) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
( 2.  "while"  Loop:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(    * Use when: You want to repeat a statement or a block of statements while a given condition) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
(is true. The number of iterations is not known beforehand.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(    * Syntax:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(      c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(      ) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 467.716771653543276 Td
(while\(condition\) {) Tj
ET
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 445.0396062992125508 Td
(          // code to be executed) Tj
ET
0. g
85.0393700787401627 439.3703149606298552 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 422.3624409448818255 Td
(      }) Tj
ET
0. g
85.0393700787401627 416.69314960629913 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 399.6852755905511003 Td
(      ) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(    * Example: Printing numbers starting from 1 until a random condition becomes false \(e.g., until) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(the number becomes greater than 5\):) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(      c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(      ) Tj
ET
0. g
85.0393700787401627 212.5986614173227451 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 195.5907874015747439 Td
(int i = 1;) Tj
ET
0. g
85.0393700787401627 189.9214960629920199 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 172.9136220472439618 Td
(      while\(i <= 5\) {) Tj
ET
0. g
85.0393700787401627 167.2443307086613231 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 150.2364566929132934 Td
(          printf\("%d\\n", i\);) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 2 de 11) Tj
ET
endstream
endobj
7 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 8 0 R
>>
endobj
8 0 obj
<<
/Length 3557
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 785.1970866141732586 Td
(          i++;) Tj
ET
0. g
85.0393700787401627 779.5277952755905062 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 762.5199212598424765 Td
(      }) Tj
ET
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 739.8427559055118081 Td
(      ) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
( 3.  "do...while"  Loop:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(    * Use when: It's like the  "while"  loop, but ensures the code block is executed at least once,) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
(because the condition is evaluated after executing the block.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(    * Syntax:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(      c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(      ) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 467.716771653543276 Td
(do {) Tj
ET
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 445.0396062992125508 Td
(          // code to be executed) Tj
ET
0. g
85.0393700787401627 439.3703149606298552 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 422.3624409448818255 Td
(      } while\(condition\);) Tj
ET
0. g
85.0393700787401627 416.69314960629913 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 399.6852755905511003 Td
(      ) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(    ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(    * Example: A scenario where you want to take user input at least once, then continue taking) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(input until the user enters a negative number:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(      c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(      ) Tj
ET
0. g
85.0393700787401627 212.5986614173227451 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 195.5907874015747439 Td
(int number;) Tj
ET
0. g
85.0393700787401627 189.9214960629920199 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 172.9136220472439618 Td
(      do {) Tj
ET
0. g
85.0393700787401627 167.2443307086613231 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 150.2364566929132934 Td
(          scanf\("%d", &number\);) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 3 de 11) Tj
ET
endstream
endobj
9 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 10 0 R
>>
endobj
10 0 obj
<<
/Length 3319
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 785.1970866141732586 Td
(          // process the number) Tj
ET
0. g
85.0393700787401627 779.5277952755905062 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 762.5199212598424765 Td
(      } while\(number >= 0\);) Tj
ET
0. g
85.0393700787401627 756.8506299212598378 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 739.8427559055118081 Td
(      ) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(Summary:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
( * Use a  "for"  loop when you know the number of iterations in advance.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
( * Use a  "while"  loop when the number of iterations isn't known, and you're testing the condition) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(before executing the loop body.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
( * Use a  "do...while"  loop when the number of iterations isn't known, but you want to ensure the) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(loop body runs at least once.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(Note that in many scenarios, any of the loop constructs can be used interchangeably, but) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(choosing the right one can make the code more readable and intuitive.) Tj
ET
0.78 g
56.6929133858267775 416.69314960629913 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(P 1:) Tj
ET
0.78 g
56.6929133858267775 394.0159842519684048 481.8941732283464034 -22.677165354330711 re
f
0.78 g
56.6929133858267775 371.3388188976377364 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(more) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(Certainly! Let's delve deeper into each of the loop constructs and examine their nuances and) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(common use cases:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(1.  "for"  Loop:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
( * Components:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(   ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(   * Initialization: Typically used to define and set up the loop control variable.) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 4 de 11) Tj
ET
endstream
endobj
11 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 12 0 R
>>
endobj
12 0 obj
<<
/Length 3392
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(   * Condition: Evaluated before each iteration. If it evaluates to  "true" , the loop continues;) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(otherwise, it stops.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(   * Update: Often used to update the loop control variable.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
( * Nuances:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(   ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(   * The  "for"  loop is compact. You can see the loop's start condition, end condition, and the) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(increment/decrement step all in one line.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(   * It's possible to create an "infinite"  "for"  loop by leaving all parts empty, like:  "for\(;;\) { }" .) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
( * Common Use Cases:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(   ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(   * Iterating through arrays or collections when you know the length.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
(   * Implementing loops where you increase/decrease a counter in fixed steps.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(2.  "while"  Loop:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
( * Components:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(   ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(   * Condition: Evaluated before each iteration.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
( * Nuances:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
(   ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(   * If the condition is  "false"  initially, the loop body might never execute.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(   * It's straightforward and ideal for scenarios where the loop continuation is determined by) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(external factors \(like user input or some real-time data\).) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
( * Common Use Cases:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(   ) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 5 de 11) Tj
ET
endstream
endobj
13 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 14 0 R
>>
endobj
14 0 obj
<<
/Length 3541
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(   * Reading data until an end-of-file \(EOF\) marker is found.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(   * Checking for user input or some real-time data feed.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(3.  "do...while"  Loop:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
( * Components:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(   ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
(   * Condition: Evaluated after each iteration.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 581.1025984251967884 Td
( * Nuances:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(   ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(   * Guarantees that the loop body will execute at least once.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(   * It might appear less frequently in code compared to the other two loop types because of this) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
("execute first, check condition later" behavior.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
( * Common Use Cases:) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(   ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(   * User input validation, where you want to prompt the user at least once.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(   * Situations where an action should be done first before a condition is checked, such as) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(processing data before checking if there's more.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(General Recommendations:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
( * Always be aware of the potential for infinite loops, as they can cause programs to become) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
(unresponsive.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
( * Use meaningful names for loop control variables to enhance readability.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
( * Consider the maintainability of your code. Choosing the right loop can make it easier for others) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 172.9136220472439618 Td
(\(or future you\) to understand your code's intent.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
( * Loop constructs might vary slightly in syntax and behavior across different programming) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 6 de 11) Tj
ET
endstream
endobj
15 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 16 0 R
>>
endobj
16 0 obj
<<
/Length 3581
>>
stream
0.5670000000000001 w
0 G
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(languages, so always refer to the documentation of the specific language you're working with.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(Remember, while understanding the differences is important, the best way to solidify your) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(understanding is through practice. Create small programs that use each type of loop to become) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(familiar with their behaviors and nuances.) Tj
ET
0.78 g
56.6929133858267775 666.1419685039369369 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(P 2:) Tj
ET
0.78 g
56.6929133858267775 643.4648031496062686 481.8941732283464034 -22.677165354330711 re
f
0.78 g
56.6929133858267775 620.7876377952754865 481.8941732283464034 -22.677165354330711 re
f
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(nested loop logic) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
(Nested loops are loops inside other loops. They can be a combination of any loop types:  "for" , ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
("while" , and  "do...while" . The outer loop executes one iteration, during which the inner loop) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 513.0711023622046696 Td
(might execute its iterations multiple times, based on its condition.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(Here's a breakdown of nested loop logic:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
(1. Basic Structure:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(For  "for"  loops:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 331.6537795275589815 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 280.6301574803148924 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 263.6222834645668627 Td
(for\(initialization; condition; update\) {) Tj
ET
0. g
85.0393700787401627 257.9529921259841672 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 240.9451181102361943 Td
(    for\(inner_initialization; inner_condition; inner_update\) {) Tj
ET
0. g
85.0393700787401627 235.2758267716534419 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 218.2679527559054122 Td
(        // Inner loop code) Tj
ET
0. g
85.0393700787401627 212.5986614173227451 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 195.5907874015747439 Td
(    }) Tj
ET
0. g
85.0393700787401627 189.9214960629920199 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 172.9136220472439618 Td
(    // Outer loop code) Tj
ET
0. g
85.0393700787401627 167.2443307086613231 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 150.2364566929132934 Td
(}) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 7 de 11) Tj
ET
endstream
endobj
17 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 18 0 R
>>
endobj
18 0 obj
<<
/Length 2887
>>
stream
0.5670000000000001 w
0 G
0. g
85.0393700787401627 802.2049606299211746 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(For  "while"  loops:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 649.1340944881889072 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 598.1104724409448181 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 581.1025984251967884 Td
(while\(condition\) {) Tj
ET
0. g
85.0393700787401627 575.4333070866141497 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 558.42543307086612 Td
(    while\(inner_condition\) {) Tj
ET
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 535.748267716535338 Td
(        // Inner loop code) Tj
ET
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 513.0711023622046696 Td
(    }) Tj
ET
0. g
85.0393700787401627 507.4018110236219741 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 490.3939370078739444 Td
(    // Outer loop code) Tj
ET
0. g
85.0393700787401627 484.7246456692912489 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 467.716771653543276 Td
(}) Tj
ET
0. g
85.0393700787401627 462.0474803149605805 425.2012598425196188 -22.677165354330711 re
f
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(2. Execution Flow:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 308.9766141732283131 Td
( * The outer loop starts its first iteration.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 286.2994488188975311 Td
( * Before the outer loop can proceed to its next iteration, the inner loop runs completely based on) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 263.6222834645668627 Td
(its condition.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 240.9451181102361943 Td
( * Once the inner loop finishes its complete cycle, control returns to the outer loop, which then) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 218.2679527559054122 Td
(proceeds to its next iteration.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 195.5907874015747439 Td
( * This process repeats until the outer loop's condition is no longer met.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(3. Common Use Cases:) Tj
ET
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 8 de 11) Tj
ET
endstream
endobj
19 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 20 0 R
>>
endobj
20 0 obj
<<
/Length 3610
>>
stream
0.5670000000000001 w
0 G
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
( * Matrix Operations: If you're dealing with 2D arrays or matrices, you often use nested loops.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(One loop for rows and another for columns.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(   ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(   c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(   ) Tj
ET
0. g
85.0393700787401627 643.4648031496062686 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 626.4569291338582389 Td
(for\(int i = 0; i < numRows; i++\) {) Tj
ET
0. g
85.0393700787401627 620.7876377952754865 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 603.7797637795274568 Td
(       for\(int j = 0; j < numCols; j++\) {) Tj
ET
0. g
85.0393700787401627 598.1104724409448181 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 581.1025984251967884 Td
(           // Process matrix[i][j]) Tj
ET
0. g
85.0393700787401627 575.4333070866141497 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 558.42543307086612 Td
(       }) Tj
ET
0. g
85.0393700787401627 552.7561417322833677 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 535.748267716535338 Td
(   }) Tj
ET
0. g
85.0393700787401627 530.0789763779526993 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 513.0711023622046696 Td
(   ) Tj
ET
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 422.3624409448818255 Td
( * Generating Combinations: If you're trying to generate all combinations of two sets of data.) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(   ) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 377.0081102362204319 Td
(   c) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(   ) Tj
ET
0. g
85.0393700787401627 325.984488188976286 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 308.9766141732283131 Td
(for\(int i = 0; i < sizeOfSetA; i++\) {) Tj
ET
0. g
85.0393700787401627 303.3073228346455608 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 286.2994488188975311 Td
(       for\(int j = 0; j < sizeOfSetB; j++\) {) Tj
ET
0. g
85.0393700787401627 280.6301574803148924 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 263.6222834645668627 Td
(           // Combine element A[i] with B[j]) Tj
ET
0. g
85.0393700787401627 257.9529921259841672 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 240.9451181102361943 Td
(       }) Tj
ET
0. g
85.0393700787401627 235.2758267716534419 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 218.2679527559054122 Td
(   }) Tj
ET
0. g
85.0393700787401627 212.5986614173227451 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 195.5907874015747439 Td
(   ) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
521.8935433070865884 28.3464566929134207 Td
(Pág: 9 de 11) Tj
ET
endstream
endobj
21 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 22 0 R
>>
endobj
22 0 obj
<<
/Length 3488
>>
stream
0.5670000000000001 w
0 G
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 762.5199212598424765 Td
(4. Pitfalls & Considerations:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
( * Performance: Be cautious of the number of iterations. A small loop inside a loop can lead to a) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(large number of total iterations. For instance, two loops that each run 100 times result in 10,000) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 671.8112598425196893 Td
(iterations.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 626.4569291338582389 Td
( * Readability: Multiple nested loops can become hard to read and maintain. If possible,) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 603.7797637795274568 Td
(encapsulate nested loops in functions with descriptive names.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 558.42543307086612 Td
( * Infinite Loops: Just as with single loops, ensure you don't create a scenario where the inner or) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 535.748267716535338 Td
(outer loop can run indefinitely.) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 490.3939370078739444 Td
( * Break/Continue Statements: In many languages, using  "break"  inside a nested loop will) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 467.716771653543276 Td
(break out of only the innermost loop. If you need to exit completely, you might need additional) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 445.0396062992125508 Td
(logic \(like using flags or conditions\).) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 399.6852755905511003 Td
(Here's a simple nested loop example to sum a 2D array:) Tj
ET
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 354.3309448818897067 Td
(c) Tj
ET
1. g
0. g
85.0393700787401627 303.3073228346455608 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 286.2994488188975311 Td
(int sum = 0;) Tj
ET
0. g
85.0393700787401627 280.6301574803148924 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 263.6222834645668627 Td
(for\(int i = 0; i < numRows; i++\) {) Tj
ET
0. g
85.0393700787401627 257.9529921259841672 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 240.9451181102361943 Td
(    for\(int j = 0; j < numCols; j++\) {) Tj
ET
0. g
85.0393700787401627 235.2758267716534419 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 218.2679527559054122 Td
(        sum += matrix[i][j];) Tj
ET
0. g
85.0393700787401627 212.5986614173227451 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 195.5907874015747439 Td
(    }) Tj
ET
0. g
85.0393700787401627 189.9214960629920199 425.2012598425196188 -22.677165354330711 re
f
BT
/F5 10 Tf
11.5 TL
1. g
85.0393700787401627 172.9136220472439618 Td
(}) Tj
ET
0. g
85.0393700787401627 167.2443307086613231 425.2012598425196188 -22.677165354330711 re
f
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 10 de 11) Tj
ET
endstream
endobj
23 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 24 0 R
>>
endobj
24 0 obj
<<
/Length 650
>>
stream
0.5670000000000001 w
0 G
1. g
1. g
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 739.8427559055118081 Td
(In conclusion, nested loops are a powerful tool when working with multi-dimensional data or) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 717.1655905511811397 Td
(when multiple repetitive tasks are required, but they should be used thoughtfully to maintain) Tj
ET
1. g
BT
/F1 11 Tf
12.6499999999999986 TL
0. g
56.6929133858267775 694.4884251968503577 Td
(clear and efficient code.) Tj
ET
1. g
BT
/F1 8 Tf
9.1999999999999993 TL
0. g
517.4935433070866111 28.3464566929134207 Td
(Pág: 11 de 11) Tj
ET
endstream
endobj
1 0 obj
<</Type /Pages
/Kids [3 0 R 5 0 R 7 0 R 9 0 R 11 0 R 13 0 R 15 0 R 17 0 R 19 0 R 21 0 R 23 0 R ]
/Count 11
>>
endobj
25 0 obj
<<
/Type /Font
/BaseFont /Helvetica
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
26 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
27 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
28 0 obj
<<
/Type /Font
/BaseFont /Helvetica-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
29 0 obj
<<
/Type /Font
/BaseFont /Courier
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
30 0 obj
<<
/Type /Font
/BaseFont /Courier-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
31 0 obj
<<
/Type /Font
/BaseFont /Courier-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
32 0 obj
<<
/Type /Font
/BaseFont /Courier-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
33 0 obj
<<
/Type /Font
/BaseFont /Times-Roman
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
34 0 obj
<<
/Type /Font
/BaseFont /Times-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
35 0 obj
<<
/Type /Font
/BaseFont /Times-Italic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
36 0 obj
<<
/Type /Font
/BaseFont /Times-BoldItalic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
37 0 obj
<<
/Type /Font
/BaseFont /ZapfDingbats
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
38 0 obj
<<
/Type /Font
/BaseFont /Symbol
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
2 0 obj
<<
/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]
/Font <<
/F1 25 0 R
/F2 26 0 R
/F3 27 0 R
/F4 28 0 R
/F5 29 0 R
/F6 30 0 R
/F7 31 0 R
/F8 32 0 R
/F9 33 0 R
/F10 34 0 R
/F11 35 0 R
/F12 36 0 R
/F13 37 0 R
/F14 38 0 R
>>
/XObject <<
>>
>>
endobj

39 0 obj
<<
/Type /Outlines
/First 40 0 R
/Last 41 0 R
/Count 2
>> 
endobj

40 0 obj
<<
/Title (P 1:
1 / 1
more)
/Parent 39 0 R
/Next 41 0 R
/Dest [9 0 R /XYZ 0 841.8899999999999864 0]
>> 
endobj

41 0 obj
<<
/Title (P 2:
1 / 1
nested loop logic)
/Parent 39 0 R
/Prev 40 0 R
/Dest [15 0 R /XYZ 0 841.8899999999999864 0]
>> 
endobj

42 0 obj
<<
/Producer (jsPDF 2.5.1)
/CreationDate (D:20231010153702+03'00')
>>
endobj
43 0 obj
<<
/Type /Catalog
/Pages 1 0 R
/OpenAction [3 0 R /FitH null]
/PageLayout /OneColumn
/Outlines 39 0 R
>>
endobj
xref
0 44
0000000000 65535 f 
0000037641 00000 n 
0000039531 00000 n 
0000000015 00000 n 
0000000376 00000 n 
0000004141 00000 n 
0000004278 00000 n 
0000007893 00000 n 
0000008030 00000 n 
0000011639 00000 n 
0000011777 00000 n 
0000015149 00000 n 
0000015288 00000 n 
0000018733 00000 n 
0000018872 00000 n 
0000022466 00000 n 
0000022605 00000 n 
0000026239 00000 n 
0000026378 00000 n 
0000029318 00000 n 
0000029457 00000 n 
0000033120 00000 n 
0000033259 00000 n 
0000036800 00000 n 
0000036939 00000 n 
0000037766 00000 n 
0000037892 00000 n 
0000038023 00000 n 
0000038157 00000 n 
0000038295 00000 n 
0000038419 00000 n 
0000038548 00000 n 
0000038680 00000 n 
0000038816 00000 n 
0000038944 00000 n 
0000039071 00000 n 
0000039200 00000 n 
0000039333 00000 n 
0000039435 00000 n 
0000039785 00000 n 
0000039861 00000 n 
0000039982 00000 n 
0000040117 00000 n 
0000040203 00000 n 
trailer
<<
/Size 44
/Root 43 0 R
/Info 42 0 R
/ID [ <90A03E3C8C53B00C1405BC273E35F12E> <90A03E3C8C53B00C1405BC273E35F12E> ]
>>
startxref
40324
%%EOF